{{>licenseInfo}}
{{#operations}}

#pragma once

#include "api/{{baseName}}Api.h"

using namespace io::swagger::server::model;

// TODO: add comment
#include "iovnet/services/iomodule.h"

// TODO: add comment
using namespace iovnet::service;

class {{baseName}} : public iovnet::service::IOModule {
 public:
  {{baseName}}(const std::string &name, {{baseName}}Schema &conf);
  ~{{baseName}}();

  PortsSchema add_port(const std::string &port_name, const PortsSchema &port);
  void remove_port(const std::string &port_name);

  void packet_in(Port &port, PacketInMetadata &md,
                 const std::vector<uint8_t> &packet) override;

  // TODO: comment about these functions
  {{#operation}}
  {{^vendorExtensions.x-has-default-impl}}
  {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{operationIdSnakeCase}}({{#allParams}}{{#secondaryParam}}const {{{dataType}}} &{{paramName}}{{#hasMore}}, {{/hasMore}}{{/secondaryParam}}{{/allParams}});
  {{/vendorExtensions.x-has-default-impl}}
  {{/operation}}
};
{{/operations}}
